crds:
    install: true
global:
    domain: argo.aknuk.dev
configs:
    params:
        server.insecure: true
    cm:
        statusbadge.enabled: true
        kustomize.buildOptions: --enable-alpha-plugins --enable-exec
        helm.valuesFileSchemes: secrets+gpg-import, secrets+gpg-import-kubernetes, secrets+age-import, secrets+age-import-kubernetes, secrets, secrets+literal, https
        resource.exclusions: |
            - apiGroups:
                - cilium.io
              kinds:
                - CiliumIdentity
              clusters:
                - "*"
    secret:
        argocdServerAdminPassword: $2a$10$VS18cczTtbUep4iBCs0FdORY9tWiBZ/ew4m62ciotMBWrWeyC.JNO
        argocdServerAdminPasswordMtime: 2024-11-21T18:48:10
        githubSecret: bd77b8ded03b9fdc259013f221d5c244
controller:
    metrics:
        enabled: true
        applicationLabels:
            enabled: true
        serviceMonitor:
            enabled: true
            additionalLabels:
                release: kube-prometheus-stack
dex:
    metrics:
        enabled: true
        serviceMonitor:
            enabled: true
            additionalLabels:
                release: kube-prometheus-stack
redis:
    metrics:
        enabled: true
        serviceMonitor:
            enabled: true
            additionalLabels:
                release: kube-prometheus-stack
server:
    allowAnyNamespace: true
    ingress:
        enabled: true
        ingressClassName: external
        annotations:
            external-dns.alpha.kubernetes.io/target: external.aknuk.dev
        hostname: argo.aknuk.dev
    metrics:
        enabled: true
        serviceMonitor:
            enabled: true
            additionalLabels:
                release: kube-prometheus-stack
notifications:
    metrics:
        enabled: true
        serviceMonitor:
            enabled: true
            additionalLabels:
                release: kube-prometheus-stack
repoServer:
    serviceAccount:
        create: true
        name: argocd-repo-server
    rbac:
        - apiGroups:
            - ""
          resources:
            - secrets
          verbs:
            - get
    env:
        - name: HELM_PLUGINS
          value: /custom-tools/helm-plugins/
        - name: HELM_SECRETS_CURL_PATH
          value: /custom-tools/curl
        - name: HELM_SECRETS_SOPS_PATH
          value: /custom-tools/sops
        - name: HELM_SECRETS_VALS_PATH
          value: /custom-tools/vals
        - name: HELM_SECRETS_KUBECTL_PATH
          value: /custom-tools/kubectl
        - name: HELM_SECRETS_BACKEND
          value: sops
        # https://github.com/jkroepke/helm-secrets/wiki/Security-in-shared-environments
        - name: HELM_SECRETS_VALUES_ALLOW_SYMLINKS
          value: "false"
        - name: HELM_SECRETS_VALUES_ALLOW_ABSOLUTE_PATH
          value: "true"
        - name: HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL
          value: "false"
        - name: HELM_SECRETS_WRAPPER_ENABLED
          value: "true"
        - name: HELM_SECRETS_DECRYPT_SECRETS_IN_TMP_DIR
          value: "true"
        - name: HELM_SECRETS_HELM_PATH
          value: /usr/local/bin/helm
        # For age
        - name: SOPS_AGE_KEY_FILE
          value: /helm-secrets-private-keys/key.txt
    volumes:
        - name: custom-tools
          emptyDir: {}
        # kubectl create secret generic helm-secrets-private-keys --from-file=key.asc=assets/gpg/private2.gpg
        - name: helm-secrets-private-keys
          secret:
            secretName: helm-secrets-private-keys
    volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
        - mountPath: /usr/local/sbin/helm
          subPath: helm
          name: custom-tools
        - mountPath: /usr/local/bin/kustomize
          name: custom-tools
          subPath: kustomize
        - mountPath: /usr/local/bin/ksops
          name: custom-tools
          subPath: ksops
        - mountPath: /helm-secrets-private-keys/
          name: helm-secrets-private-keys
    initContainers:
        - name: gitops-tools
          image: ajaykumar4/gitops-tools:latest
          imagePullPolicy: Always
          command:
            - sh
            - -ec
          args:
            - |
              mkdir -p /custom-tools/
              cp -rf /gitops-tools/* /custom-tools
              chmod +x /custom-tools/*
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1vntqr796ff4ql0rd0j5y7z8e2750uejm4v6kymleqlyeldt9yyvs4xv7e0
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA4MnlVQXdLWWs4ZnNuR3Fs
            dlp6NmhvRmpaTC80TGc1cHZLYnR3WmtXV1ZrCmw4QVFkRFJzekRFNFFDUFNrZGY2
            emJBcGx0bUlmY3BuSzU4dmpLaFAzUzQKLS0tIG1JUXpYV2hYMlA0NFZxN25oaHpO
            TFJpbHFyZlkvZkJOVXd2VVRqdW5yV2cKXM37OJ+QguaYk4qUk1beB8g/0YW/QLDz
            bKfjFB40M4wn9JqOQP0aneOJAGkcdWVXPkiySZwaU2ykPRL/Rq3dGA==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2024-11-21T18:48:12Z"
    mac: ENC[AES256_GCM,data:zT527yE77LwyJj7xNwILIYJdlw/dYgtpKUAxq2g+Idtxk6iF/EOpTDVjRc40/Xvqax6j+HumPoFZ53OPoLi6vPgjnOtqCEyMQRvf3WpaPEGJ6ckRtv4ngan+cwbc4A+FSp7/ZVwzuKOz/dxCwLlZc+CoF/hL5y+A9yCWgWDkkaA=,iv:m2+QsGPCpOPCO4mCGUe5wbAZfWcW5vnKZ7HOWOPkCX8=,tag:86UX92N93LC/P4d7fnCyKg==,type:str]
    pgp: []
    encrypted_regex: ^(data|stringData)$
    version: 3.9.1
